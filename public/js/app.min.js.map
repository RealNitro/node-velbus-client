{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","build/js/app.js","app.min.js","build/js/client.js","build/js/modules/VMB4DC.js","build/js/modules/VMB4RYNO.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Client","$","document","ready","node_velbus_client_config","server","this","./client",2,"modules","bind","fn","me","apply","arguments","VMB4RYNO","VMB4DC","send","components","connection","WebSocket","protocol","host","port","onerror","error","console","log","onmessage","message","data","error1","JSON","parse","address","channel","process","constructor","warn","each","_this","index","element","icon_class","bootbox","alert","prototype","json","counter","readyState","setTimeout","./modules/VMB4DC","./modules/VMB4RYNO",3,"input","attr","append","slider","on","speed","parent","command","value","stringify","find","led_status",4,"checkbox","bootstrapToggle","change","prop","off"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function() {\n  var Client;\n\n  Client = require('./client');\n\n  $(document).ready(function() {\n    new Client(node_velbus_client_config.server);\n  });\n\n}).call(this);\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function() {\n  var Client;\n\n  Client = require('./client');\n\n  $(document).ready(function() {\n    new Client(node_velbus_client_config.server);\n  });\n\n}).call(this);\n\n},{\"./client\":2}],2:[function(require,module,exports){\n(function() {\n  var Client, modules,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  modules = {\n    VMB4RYNO: require('./modules/VMB4RYNO'),\n    VMB4DC: require('./modules/VMB4DC')\n  };\n\n  Client = (function() {\n    function Client(server) {\n      this.send = bind(this.send, this);\n      var components;\n      this.connection = new WebSocket(server.protocol + '://' + server.host + ':' + server.port);\n      this.connection.onerror = function(error) {\n        console.log('WebSocket Error ' + error);\n      };\n      this.connection.onmessage = function(message) {\n        var data, error, error1;\n        data = JSON.parse(message.data);\n        if (data.address.length < 2) {\n          data.address = \"0\" + data.address;\n        }\n        if ((data.address + '_' + data.channel) in components) {\n          try {\n            components[data.address + '_' + data.channel].process(data);\n          } catch (error1) {\n            error = error1;\n            console.log(error);\n            this.constructor.warn('Unsupported message received.');\n          }\n        }\n      };\n      components = {};\n      $('.velbus').each((function(_this) {\n        return function(index, element) {\n          components[($(element).data('address')) + '_' + ($(element).data('channel'))] = new modules[$(element).data('module')]($(element), _this.send);\n        };\n      })(this));\n      return;\n    }\n\n    Client.warn = function(message) {\n      var icon_class;\n      icon_class = 'glyphicon glyphicon-exclamation-sign';\n      bootbox.alert({\n        message: \"<span class='\" + icon_class + \"' aria-hidden='true' /> \" + message\n      });\n    };\n\n    Client.prototype.send = function(json, counter) {\n      if (counter == null) {\n        counter = 0;\n      }\n      if (this.connection.readyState) {\n        this.connection.send(json);\n      } else {\n        if (counter === 10) {\n          this.constructor.warn('Cannot connect to server.');\n          return;\n        }\n        setTimeout(((function(_this) {\n          return function() {\n            _this.send(json, counter + 1);\n          };\n        })(this)), 100);\n      }\n    };\n\n    return Client;\n\n  })();\n\n  module.exports = Client;\n\n}).call(this);\n\n},{\"./modules/VMB4DC\":3,\"./modules/VMB4RYNO\":4}],3:[function(require,module,exports){\n(function() {\n  var VMB4DC;\n\n  VMB4DC = (function() {\n    function VMB4DC(element, send) {\n      var input, message;\n      this.element = element;\n      message = {\n        address: this.element.data('address'),\n        channel: this.element.data('channel')\n      };\n      input = $('<input type=\"text\">');\n      input.attr('data-slider-min', 0);\n      input.attr('data-slider-max', 100);\n      input.attr('data-slider-value', 0);\n      input.attr('data-slider-tooltip', 'always');\n      this.element.append(input);\n      input.slider();\n      input.on('slideStop', function() {\n        var speed;\n        speed = $(this).parent('.velbus').data('speed');\n        $(this).slider('disable');\n        message.command = 'set_dim_channel_value';\n        message.value = $(this).slider('getValue');\n        message.speed = speed;\n        send(JSON.stringify(message));\n      });\n      message.command = 'dimmer_channel_status_request';\n      send(JSON.stringify(message));\n      return;\n    }\n\n    VMB4DC.prototype.process = function(data) {\n      switch (data.message) {\n        case 'dimmercontroller_status':\n          this.element.find('input').slider('setValue', data.value);\n          if (data.led_status & 0x70) {\n            return this.element.find('input').slider('enable');\n          }\n          break;\n        case 'slider_status':\n          return this.element.find('input').slider('setValue', data.value);\n        default:\n          throw new Error('message_not_supported');\n      }\n    };\n\n    return VMB4DC;\n\n  })();\n\n  module.exports = VMB4DC;\n\n}).call(this);\n\n},{}],4:[function(require,module,exports){\n(function() {\n  var VMB4RYNO;\n\n  VMB4RYNO = (function() {\n    function VMB4RYNO(element, send) {\n      var checkbox, message;\n      this.element = element;\n      message = {\n        address: this.element.data('address'),\n        channel: this.element.data('channel')\n      };\n      checkbox = $('<input type=\"checkbox\">');\n      this.element.append(checkbox);\n      checkbox.bootstrapToggle();\n      checkbox.change(function() {\n        if ($(this).prop('checked')) {\n          $(this).data('bs.toggle').off(true);\n          message.command = 'switch_relay_on';\n        } else {\n          $(this).data('bs.toggle').on(true);\n          message.command = 'switch_relay_off';\n        }\n        send(JSON.stringify(message));\n      });\n      message.command = 'relay_status_request';\n      send(JSON.stringify(message));\n      return;\n    }\n\n    VMB4RYNO.prototype.process = function(data) {\n      switch (data.message) {\n        case 'relay_channel_on':\n          return this.element.find('input').data('bs.toggle').on(true);\n        case 'relay_channel_off':\n          return this.element.find('input').data('bs.toggle').off(true);\n        default:\n          throw new Error('message_not_supported');\n      }\n    };\n\n    return VMB4RYNO;\n\n  })();\n\n  module.exports = VMB4RYNO;\n\n}).call(this);\n\n},{}]},{},[1])\n\n","(function() {\n  var Client, modules,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n  modules = {\n    VMB4RYNO: require('./modules/VMB4RYNO'),\n    VMB4DC: require('./modules/VMB4DC')\n  };\n\n  Client = (function() {\n    function Client(server) {\n      this.send = bind(this.send, this);\n      var components;\n      this.connection = new WebSocket(server.protocol + '://' + server.host + ':' + server.port);\n      this.connection.onerror = function(error) {\n        console.log('WebSocket Error ' + error);\n      };\n      this.connection.onmessage = function(message) {\n        var data, error, error1;\n        data = JSON.parse(message.data);\n        if (data.address.length < 2) {\n          data.address = \"0\" + data.address;\n        }\n        if ((data.address + '_' + data.channel) in components) {\n          try {\n            components[data.address + '_' + data.channel].process(data);\n          } catch (error1) {\n            error = error1;\n            console.log(error);\n            this.constructor.warn('Unsupported message received.');\n          }\n        }\n      };\n      components = {};\n      $('.velbus').each((function(_this) {\n        return function(index, element) {\n          components[($(element).data('address')) + '_' + ($(element).data('channel'))] = new modules[$(element).data('module')]($(element), _this.send);\n        };\n      })(this));\n      return;\n    }\n\n    Client.warn = function(message) {\n      var icon_class;\n      icon_class = 'glyphicon glyphicon-exclamation-sign';\n      bootbox.alert({\n        message: \"<span class='\" + icon_class + \"' aria-hidden='true' /> \" + message\n      });\n    };\n\n    Client.prototype.send = function(json, counter) {\n      if (counter == null) {\n        counter = 0;\n      }\n      if (this.connection.readyState) {\n        this.connection.send(json);\n      } else {\n        if (counter === 10) {\n          this.constructor.warn('Cannot connect to server.');\n          return;\n        }\n        setTimeout(((function(_this) {\n          return function() {\n            _this.send(json, counter + 1);\n          };\n        })(this)), 100);\n      }\n    };\n\n    return Client;\n\n  })();\n\n  module.exports = Client;\n\n}).call(this);\n","(function() {\n  var VMB4DC;\n\n  VMB4DC = (function() {\n    function VMB4DC(element, send) {\n      var input, message;\n      this.element = element;\n      message = {\n        address: this.element.data('address'),\n        channel: this.element.data('channel')\n      };\n      input = $('<input type=\"text\">');\n      input.attr('data-slider-min', 0);\n      input.attr('data-slider-max', 100);\n      input.attr('data-slider-value', 0);\n      input.attr('data-slider-tooltip', 'always');\n      this.element.append(input);\n      input.slider();\n      input.on('slideStop', function() {\n        var speed;\n        speed = $(this).parent('.velbus').data('speed');\n        $(this).slider('disable');\n        message.command = 'set_dim_channel_value';\n        message.value = $(this).slider('getValue');\n        message.speed = speed;\n        send(JSON.stringify(message));\n      });\n      message.command = 'dimmer_channel_status_request';\n      send(JSON.stringify(message));\n      return;\n    }\n\n    VMB4DC.prototype.process = function(data) {\n      switch (data.message) {\n        case 'dimmercontroller_status':\n          this.element.find('input').slider('setValue', data.value);\n          if (data.led_status & 0x70) {\n            return this.element.find('input').slider('enable');\n          }\n          break;\n        case 'slider_status':\n          return this.element.find('input').slider('setValue', data.value);\n        default:\n          throw new Error('message_not_supported');\n      }\n    };\n\n    return VMB4DC;\n\n  })();\n\n  module.exports = VMB4DC;\n\n}).call(this);\n","(function() {\n  var VMB4RYNO;\n\n  VMB4RYNO = (function() {\n    function VMB4RYNO(element, send) {\n      var checkbox, message;\n      this.element = element;\n      message = {\n        address: this.element.data('address'),\n        channel: this.element.data('channel')\n      };\n      checkbox = $('<input type=\"checkbox\">');\n      this.element.append(checkbox);\n      checkbox.bootstrapToggle();\n      checkbox.change(function() {\n        if ($(this).prop('checked')) {\n          $(this).data('bs.toggle').off(true);\n          message.command = 'switch_relay_on';\n        } else {\n          $(this).data('bs.toggle').on(true);\n          message.command = 'switch_relay_off';\n        }\n        send(JSON.stringify(message));\n      });\n      message.command = 'relay_status_request';\n      send(JSON.stringify(message));\n      return;\n    }\n\n    VMB4RYNO.prototype.process = function(data) {\n      switch (data.message) {\n        case 'relay_channel_on':\n          return this.element.find('input').data('bs.toggle').on(true);\n        case 'relay_channel_off':\n          return this.element.find('input').data('bs.toggle').off(true);\n        default:\n          throw new Error('message_not_supported');\n      }\n    };\n\n    return VMB4RYNO;\n\n  })();\n\n  module.exports = VMB4RYNO;\n\n}).call(this);\n"],"sourceRoot":"/source/"}